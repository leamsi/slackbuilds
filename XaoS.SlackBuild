#! /bin/bash

#BUILD SCRIPT FOR XAOS (TESTED WITH VERSION 3.1.3)
# XaoS can be obtained at http://xaos.sourceforge.net/english.php
CWD=$(pwd)
APPNAME=xaos
VERSION=3.1.3
ARCH=i486
CPU=i686
BUILD=1icv
TMP=/tmp
#This means that "make install" auto copies the doc files (README, INSTALL, etc) in a directory
# instead of copying or moving those files, this script will create a link in /usr/doc/appname-version
#which points to the right place.
AUTODOCDIR=usr/share/XaoS/doc

if [ ! -d $TMP ]; then
   mkdir -p $TMP
fi

#ESSENTIAL CFLAGS/CPPFLAGS
SLKCFLAGS="-O2 -march=$ARCH -mcpu=$CPU"
SLKCXXFLAGS="$SLKCFlAGS"

#PACKAGE SPECIFIC FLAGS (if any)
PKGCFLAGS="-D__OPTIMIZE__ -ffast-math -fno-exceptions -funroll-loops"
PKGCXXFLAGS=

#Where the source file is located
SOURCE_DIR=$(pwd)
SOURCE_FILE=XaoS-$VERSION.tar.gz

#Where to build the package...
PKG=$TMP/xaos-$VERSION-$ARCH

if [ ! -d $PKG ];
then
   mkdir -p $PKG
else
   rm -rf $PKG/*
fi

cd $PKG
tar zxf $SOURCE_DIR/$SOURCE_FILE

echo " $(basename $0). Building version $VERSION for $ARCH (Build $BUILD) "

cd $(basename $SOURCE_FILE .tar.gz)

./configure --prefix=/usr CFLAGS="$SLKCFLAGS $PKGCFLAGS" CXXFLAGS="$SLKCXXFLAGS $PKGCXXFLAGS" 
make
mkdir $PKG/rootdir
make install DESTDIR=$PKG/rootdir

#Package especific things follow:
echo " THE PREVIOUS ERRORS (RELATED TO CH{OWN,GRP,MOD}) ARE NORMAL"
#The install target has a problem with DESTDIR and it doesn't runs the following commands unless you have XaoS already installed:
#chown root $(bindir)/xaos;<some others>, this will be changed latter anyway
#Fix it in case it did run...
if [ -f /usr/bin/xaos ]; then
   chown root:bin /usr/bin/xaos
   chmod -s /usr/bin/xaos
fi;
rm -f $PKG/rootdir/usr/info
ginstall -c -d $PKG/rootdir/usr/info
ginstall -c -m 644 doc/xaos.info $PKG/rootdir/usr/info
make -C src/i18n/ install LOCALEDIR=$PKG/rootdir/usr/share/locale
#END of package specific things.

#copy doc files
if [ "$AUTODOCDIR" = "" ]; then
 mkdir -p $PKG/rootdir/usr/doc/$APPNAME-$VERSION
 cp -f README COPYING ChangeLog $PKG/rootdir/usr/doc/$APPNAME-$VERSION
else
 mkdir -p $PKG/rootdir/usr/doc
 (cd $PKG/rootdir/usr/doc
  ln -sf ../../$AUTODOCDIR $APPNAME-$VERSION
 )
 #It actually misses a few files...
 cp -f COPYING RELEASE_NOTES ChangeLog* TODO $PKG/rootdir/usr/doc/$APPNAME-$VERSION
fi

#gzip man and info pages
gzip -9 $PKG/rootdir/usr/man/man?/*.?
rm -f $PKG/rootdir/usr/info/dir
gzip -9 $PKG/rootdir/usr/info/*

cd $PKG/rootdir

#strip executables (this was taken from some SlackBuilds from Pat himself)
(
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip 2> /dev/null
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip 2> /dev/null
)

 
#Almost-safe default:
chown -R root:root *
if [ -d usr/bin ]; then
   chown -R root:bin usr/bin
fi
if [ -d bin ]; then
   chown -R root:bin bin
fi
find . -perm 775 -exec chmod 755 {} \;
find . -perm 777 -exec chmod 755 {} \;
find . -perm 511 -exec chmod 755 {} \;
find . -perm 711 -exec chmod 755 {} \;
find . -perm 555 -exec chmod 755 {} \;
find . -perm 664 -exec chmod 644 {} \;
find . -perm 444 -exec chmod 644 {} \;
find . -perm 600 -exec chmod 644 {} \;
find . -perm 400 -exec chmod 644 {} \;
find . -perm 440 -exec chmod 644 {} \;

mkdir install

#Here comes the slac-desc (yes it is inside the script)
cat > install/slack-desc <<_EOS_
        |-----handy-ruler------------------------------------------------------|

$APPNAME: $APPNAME ($VERSION) is a fractal drawer with fast zoom in and out
$APPNAME: 
$APPNAME:  Unlike fractint (also included with Slackware) with XaoS you can do
$APPNAME: fast zooms into the fractal in real-time.
$APPNAME:  This package was compiled for 486s (but optimized for 686s) by
$APPNAME: Ismael Cortes V. the day $(date +%d-%b-%Y)
_EOS_
 
#This is for linuxpackages.net compliant software...
cat > install/slack-required <<_EOS__
aalib >= 1.4rc5-i386-1
svgalib >= 1.4.3-i386-2
x11 >= 6.8.2-i486-4
_EOS__

#Here goes the package :)
/sbin/makepkg -l y -c n ../$APPNAME-$VERSION-$ARCH-$BUILD.tgz

#cleanup and we're done.
cd ..
rm -rf rootdir
rm -rf $(basename $SOURCE_FILE .tar.gz) 
